2025-03-03T09:37:27.581Z info: This is an info message
2025-03-03T09:37:27.584Z warn: This is a warning
2025-03-03T09:37:27.585Z error: This is an error
2025-03-03T09:37:27.585Z info: User data:
2025-03-03T09:37:57.639Z error: Invalid string / salt: Not a string
2025-03-03T09:40:12.852Z error: Invalid string / salt: Not a string
2025-03-03T09:48:47.687Z error: Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative
2025-03-03T09:49:28.918Z error: Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative
2025-03-03T09:50:09.073Z error: Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative
2025-03-03T09:50:47.778Z error: Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative
2025-03-03T09:52:57.629Z error: Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative
2025-03-03T09:57:34.063Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-03T10:00:30.447Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: "garry_s" }
2025-03-03T15:36:40.188Z error: Cannot access 'users' before initialization
2025-03-03T15:36:40.193Z error: Cannot access 'users' before initialization
2025-03-03T15:37:11.339Z error: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle
2025-03-03T15:37:11.345Z error: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle
2025-03-03T15:37:46.339Z error: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle
2025-03-03T15:37:46.345Z error: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle
2025-03-03T15:38:15.767Z error: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle
2025-03-03T15:38:15.774Z error: Converting circular structure to JSON
    --> starting at object with constructor 'MongoClient'
    |     property 's' -> object with constructor 'Object'
    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'
    --- property 'client' closes the circle
<<<<<<< HEAD
2025-03-03T19:56:22.493Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: "pina" }
=======
2025-03-04T14:25:58.432Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/src/controllers/uploads/67b45a1099a8c17ce21a7f5c-1741098358431.xlsx'
2025-03-04T14:34:10.202Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741098850201.xlsx'
2025-03-04T14:37:06.599Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741099026598.xlsx'
2025-03-04T14:40:36.189Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741099236187.xlsx'
2025-03-04T14:41:44.145Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741099304142.xlsx'
2025-03-04T14:53:22.688Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741100002686.xlsx'
2025-03-04T14:53:42.713Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741100022709.xlsx'
2025-03-04T14:56:26.220Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741100186219.xlsx'
2025-03-04T15:00:05.640Z error: ENOENT: no such file or directory, open '/home/ubuntu/hims-latest/hims-copy/uploads/67b45a1099a8c17ce21a7f5c-1741100405635.xlsx'
2025-03-04T21:18:50.462Z error: devices validation failed: createdBy: Path `createdBy` is required., color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:28:06.779Z error: devices validation failed: min: Cast to ObjectId failed for value "MIN-6451" (type string) at path "min" because of "BSONError", color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:34:37.785Z error: devices validation failed: createdBy: Path `createdBy` is required., color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:36:41.251Z error: devices validation failed: min: Cast to ObjectId failed for value "MIN-6451" (type string) at path "min" because of "BSONError", color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:39:18.883Z error: devices validation failed: min: Cast to ObjectId failed for value "MIN-6451" (type string) at path "min" because of "BSONError", color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:40:39.299Z error: devices validation failed: min: Cast to ObjectId failed for value "MIN-6451" (type string) at path "min" because of "BSONError", color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:49:13.402Z error: devices validation failed: color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:52:37.831Z error: devices validation failed: color: Path `color` is required., imei: Path `imei` is required., build_no: Path `build_no` is required., serial_no: Path `serial_no` is required., device_model: Path `device_model` is required., device_name: Path `device_name` is required.
2025-03-04T21:54:14.677Z error: saved_devices is not defined
2025-03-04T22:01:35.933Z error: devices validation failed: min: Cast to ObjectId failed for value "Query {
  _mongooseOptions: {},
  _transforms: [],
  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },
  _executionStack: null,
  mongooseCollection: Collection {
    collection: Collection { s: [Object], client: [MongoClient] },
    Promise: [Function: Promise],
    modelName: 'vins',
    _closed: false,
    opts: {
      autoIndex: true,
      autoCreate: true,
      autoSearchIndex: false,
      schemaUserProvidedOptions: [Object],
      capped: false,
      Promise: undefined,
      '$wasForceClosed': undefined
    },
    name: 'vins',
    collectionName: 'vins',
    conn: NativeConnection {
      base: [Mongoose],
      collections: [Object],
      models: [Object],
      config: {},
      replica: false,
      options: null,
      otherDbs: [],
      relatedDbs: {},
      states: [Object: null prototype],
      _readyState: 1,
      _closeCalled: undefined,
      _hasOpened: true,
      plugins: [],
      id: 0,
      _queue: [],
      _listening: false,
      _lastHeartbeatAt: 1741125695303,
      _connectionOptions: [Object],
      _connectionString: 'mongodb+srv://rootadmin:test1234@hims.6jlmt.mongodb.net/HIMS_DB',
      client: [MongoClient],
      '$initialConnection': [Promise],
      db: [Db],
      host: 'hims-shard-00-00.6jlmt.mongodb.net',
      port: 27017,
      name: 'HIMS_DB',
      [Symbol(mongoose:defaultConnection)]: true
    },
    queue: [],
    buffer: false,
    emitter: EventEmitter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false
    }
  },
  model: Model { vins },
  schema: Schema {
    obj: {
      type: [Object],
      school: [Object],
      customer: [Object],
      student: [Object],
      distributor: [Object],
      supplier: [Object],
      vin: [Object]
    },
    paths: {
      type: [SchemaString],
      school: [SchemaObjectId],
      customer: [SchemaObjectId],
      student: [SchemaObjectId],
      distributor: [SchemaObjectId],
      supplier: [SchemaObjectId],
      vin: [SchemaString],
      _id: [SchemaObjectId],
      createdAt: [SchemaDate],
      updatedAt: [SchemaDate],
      __v: [SchemaNumber]
    },
    aliases: {},
    subpaths: {},
    virtuals: { id: [VirtualType] },
    singleNestedPaths: {},
    nested: {},
    inherits: {},
    callQueue: [],
    _indexes: [],
    _searchIndexes: [],
    methods: { initializeTimestamps: [Function (anonymous)] },
    methodOptions: {},
    statics: {},
    tree: {
      type: [Object],
      school: [Object],
      customer: [Object],
      student: [Object],
      distributor: [Object],
      supplier: [Object],
      vin: [Object],
      _id: [Object],
      createdAt: [Object],
      updatedAt: [Function: Date],
      __v: [Function: Number],
      id: [VirtualType]
    },
    query: {},
    childSchemas: [],
    plugins: [ [Object], [Object], [Object], [Object], [Object] ],
    '$id': 4,
    mapPaths: [],
    s: { hooks: [Kareem] },
    _userProvidedOptions: { timestamps: true },
    options: {
      strict: true,
      strictQuery: false,
      bufferCommands: true,
      capped: false,
      versionKey: '__v',
      optimisticConcurrency: false,
      minimize: true,
      autoIndex: null,
      discriminatorKey: '__t',
      shardKey: null,
      read: null,
      validateBeforeSave: true,
      validateModifiedOnly: false,
      _id: true,
      id: true,
      typeKey: 'type',
      timestamps: true,
      pluralization: true
    },
    '$timestamps': { createdAt: 'createdAt', updatedAt: 'updatedAt' },
    '$globalPluginsApplied': true
  },
  op: 'findOne',
  options: {},
  _conditions: { min: 'MIN-6451' },
  _fields: undefined,
  _updateDoc: undefined,
  _path: undefined,
  _distinctDoc: undefined,
  _collection: NodeCollection {
    collection: Collection {
      collection: [Collection],
      Promise: [Function: Promise],
      modelName: 'vins',
      _closed: false,
      opts: [Object],
      name: 'vins',
      collectionName: 'vins',
      conn: [NativeConnection],
      queue: [],
      buffer: false,
      emitter: [EventEmitter]
    },
    collectionName: 'vins'
  },
  _traceFunction: undefined,
  '$useProjection': true
}" (type Query) at path "min" because of "BSONError"
2025-03-04T22:15:52.038Z error: E11000 duplicate key error collection: HIMS_DB.devices index: serial_no_1 dup key: { serial_no: "873657576134136000" }
2025-03-04T22:26:19.988Z error: user_vin_id is not defined
2025-03-04T23:11:02.978Z error: device.remove is not a function
2025-03-04T23:17:54.630Z error: deleted is not defined
2025-03-04T23:29:59.783Z error: customers.find(...).populate(...).exec(...).select is not a function
<<<<<<< HEAD
>>>>>>> af99e13582bd895f59a4afee1ee48fee27f0e637
2025-03-10T07:00:46.822Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: "test" }
2025-03-10T07:00:52.143Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: "test" }
=======
2025-03-08T19:00:21.908Z error: devices validation failed: color: Path `color` is required.
2025-03-08T19:02:54.933Z error: E11000 duplicate key error collection: HIMS_DB.devices index: serial_no_1 dup key: { serial_no: "8628902789909998" }
2025-03-08T19:04:45.290Z error: E11000 duplicate key error collection: HIMS_DB.devices index: imei_1 dup key: { imei: "8782989389023098" }
2025-03-10T11:22:23.402Z error: device_model is not defined
2025-03-10T11:22:23.420Z error: device_model is not defined
2025-03-10T13:22:57.161Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: "ochaelfrost" }
2025-03-10T13:23:03.813Z error: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: "ochaelfrost" }
2025-03-10T22:10:50.618Z error: customers.findOneByIdAndUpdate is not a function
2025-03-10T22:10:50.623Z error: customers.findOneByIdAndUpdate is not a function
2025-03-10T22:12:13.864Z error: Cast to ObjectId failed for value "okoisorjr@gmail.com" (type string) at path "_id" for model "customers"
2025-03-10T22:12:13.962Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-10T22:15:37.772Z error: Cast to ObjectId failed for value "okoisorjr@gmail.com" (type string) at path "_id" for model "customers"
2025-03-10T22:15:37.861Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-10T22:17:50.946Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: email_1 dup key: { email: "okoisorjr@gmail.com" }
2025-03-10T22:17:51.294Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-10T22:22:14.791Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: email_1 dup key: { email: "ochaelfrost1@gmail.com" }
2025-03-10T22:22:15.650Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-10T22:24:26.190Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-10T22:24:26.197Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: email_1 dup key: { email: "ochaelfrost1@gmail.com" }
2025-03-10T22:26:03.014Z error: Cast to ObjectId failed for value "ochaelfrost1@gmail.com" (type string) at path "customer" because of "BSONError"
2025-03-10T22:35:17.017Z error: Cast to ObjectId failed for value "ochaelfrost1@gmail.com" (type string) at path "customer" because of "BSONError"
2025-03-10T22:40:20.888Z error: Cast to ObjectId failed for value "ochaelfrost1@gmail.com" (type string) at path "customer" because of "BSONError"
2025-03-10T22:40:21.047Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.customers index: username_1 dup key: { username: null }
2025-03-10T22:41:42.440Z error: id is not defined
2025-03-10T22:41:42.445Z error: id is not defined
2025-03-10T22:44:47.905Z error: id is not defined
2025-03-10T22:44:47.906Z error: id is not defined
2025-03-10T22:45:44.302Z error: id is not defined
2025-03-10T22:45:44.304Z error: id is not defined
2025-03-10T22:47:00.253Z error: id is not defined
2025-03-10T22:47:00.254Z error: id is not defined
2025-03-10T22:47:56.919Z error: id is not defined
2025-03-10T22:47:56.921Z error: id is not defined
2025-03-10T22:49:19.167Z error: id is not defined
2025-03-10T22:49:19.180Z error: id is not defined
2025-03-10T22:53:11.458Z error: Cannot read properties of null (reading '_id')
2025-03-10T22:55:38.179Z error: Cannot read properties of null (reading '_id')
2025-03-10T22:55:38.274Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.devices index: _id_ dup key: { _id: ObjectId('67b5073845783124f963c80c') }
2025-03-10T22:56:36.508Z error: Cannot read properties of null (reading '_id')
2025-03-10T22:56:36.599Z error: Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: HIMS_DB.devices index: _id_ dup key: { _id: ObjectId('67b5073845783124f963c80c') }
2025-03-10T23:08:07.590Z error: Cannot access 'device' before initialization
2025-03-10T23:08:07.598Z error: Cannot access 'device' before initialization
2025-03-10T23:09:39.273Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:14:03.591Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:15:32.679Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:16:37.200Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:17:35.273Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:25:21.852Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:25:21.858Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:30:36.988Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:30:36.998Z error: Cannot read properties of undefined (reading 'push')
2025-03-10T23:32:25.377Z error: Cannot read properties of undefined (reading 'push')
2025-03-10T23:32:25.381Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:35:13.340Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:35:13.346Z error: device.save is not a function
2025-03-10T23:35:58.734Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:40:17.840Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:43:48.815Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:46:22.718Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:47:21.689Z error: Cannot read properties of null (reading 'customer')
2025-03-10T23:49:33.073Z error: Cannot read properties of null (reading '_id')
2025-03-10T23:51:34.725Z error: Cannot read properties of null (reading '_id')
2025-03-10T23:52:53.548Z error: Cannot read properties of null (reading '_id')
>>>>>>> 0f4200f3ccda502ab22601f9064ecb977335b208
